priority 1
snippet withoc "with HOC"
const with$1 = WrappedComponent => props => {
	return (
		<$2>
			<WrappedComponent {...props} />
		</$2>
	);
};
endsnippet

snippet rcr	"react class render"
render() {
  const { ...props } = this.props;

	return (<div>text</div>)
}
endsnippet

snippet rcc "React Class Component" b
import React, { Component } from 'react';
import PropTypes from 'prop-types';

class ${1:`!v expand('%:t:r')`} extends Component {
	static propTypes = {
		${2:children: PropTypes.node,
		className: PropTypes.string,}
	};

	constructor(props) {
		super(props);
	}

	render() {
		return (
			<${3:div}>
				$0
			</$3>
		);
	}
}

export default $1;
endsnippet

snippet rfc "React Functional Component" b
import React from 'react';
import PropTypes from 'prop-types';

function ${1:`!v expand('%:t:r')`}({ $3 }) {
	return (
		<${5:div}>
			$0
		</$5>
	);
}

$1.defaultProps = {$4};

$1.propTypes = {`!p
props = t[3]

if props:
  snip >> 1
  for prop in props.split(', '):
    snip += prop + ': PropTypes.any,'
`
};

export default $1;
endsnippet
